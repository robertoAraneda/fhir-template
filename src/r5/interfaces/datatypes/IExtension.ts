import IAttachment from './IAttachment';
import ICodeableReference from './ICodeableReference';
import IQuantity from './IQuantity';
import { IElement } from '../base';
import IAddress from './IAddress';
import ICodeableConcept from './ICodeableConcept';
import IReference from './IReference';
import ICoding from './ICoding';
import IContactPoint from './IContactPoint';
import IIdentifier from './IIdentifier';
import IPeriod from './IPeriod';
import IHumanName from './IHumanName';
import IDuration from './IDuration';
import IRange from './IRange';
import ISignature from './ISignature';
import IMeta from './IMeta';

export default interface IExtension extends IElement {
  url: string;
  _url?: IElement;
  valueBase64Binary?: string;
  _valueBase64Binary?: IElement;
  valueBoolean?: boolean;
  _valueBoolean?: IElement;
  valueCanonical?: string;
  _valueCanonical?: IElement;
  valueCode?: string;
  _valueCode?: IElement;
  valueDate?: string;
  _valueDate?: IElement;
  valueDateTime?: string;
  _valueDateTime?: IElement;
  valueDecimal?: number;
  _valueDecimal?: IElement;
  valueId?: string;
  _valueId?: IElement;
  valueInstant?: string;
  _valueInstant?: IElement;
  valueInteger?: number;
  _valueInteger?: IElement;
  valueInteger64?: number;
  _valueInteger64?: IElement;
  valueMarkdown?: string;
  _valueMarkdown?: IElement;
  valueOid?: string;
  _valueOid?: IElement;
  valuePositiveInt?: number;
  _valuePositiveInt?: IElement;
  valueString?: string;
  _valueString?: IElement;
  valueTime?: string;
  _valueTime?: IElement;
  valueUnsignedInt?: number;
  _valueUnsignedInt?: IElement;
  valueUri?: string;
  _valueUri?: IElement;
  valueUrl?: string;
  _valueUrl?: IElement;
  valueUuid?: string;
  _valueUuid?: IElement;
  valueAddress?: IAddress;
  valueCodeableConcept?: ICodeableConcept;
  valueAttachment?: IAttachment;

  valueReference?: IReference;
  valueCodeableReference?: ICodeableReference;
  valueCoding?: ICoding;
  valueContactPoint?: IContactPoint;
  valueIdentifier?: IIdentifier;
  valueHumanName?: IHumanName;
  valueDuration?: IDuration;
  valueRange?: IRange;

  valuePeriod?: IPeriod;
  valueQuantity?: IQuantity;
  valueSignature?: ISignature;
  valueMeta?: IMeta;
}
